version: '3.8'

services:

  db:
    image: mariadb
    container_name: mariadb
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
    networks:
      - inception-network

  wordpress:
    depends_on:
      - mariadb
    container_name: wordpress
    image: wordpress:latest
    volumes:
      - wp_data:/var/www/html
    ports:
      - 80:80
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    networks:
      - inception-network

    # env_file:
    #   - .env

  nginx:
      image: nginx
      container_name: nginx
      # build:
      #   context: ./requirements/nginx
      #   dockerfile: Dockerfile
      ports:
        - 443:443
      volumes:
        - wp_data:/var/www/html
      restart: always
      networks:
        - inception-network

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      # device: /Users/mim/42/inception-data/db #home
      device: /Users/mreymond/data/db #school
      o: bind
  wp_data:
    driver: local
    driver_opts:
      type: none
      # device: /Users/mim/42/inception-data/db #home
      device: /Users/mreymond/data/wp #school
      o: bind

networks:
  inception-network:
  
# Un volume contenant votre base de données WordPress
# Un second volume contenant les fichiers de votre site WordPress.

# Un docker-network qui fera le lien entre vos containers
# La ligne network(s) doit être présente dans votre fichier docker-compose.yml
# Renseignez-vous sur les bonnes pratiques d’écriture de Dockerfiles et le "PID 1".